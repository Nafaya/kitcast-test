// eslint-disable-next-line import/no-commonjs
module.exports = {
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: [ 'tsconfig.eslint.json', 'tsconfig.json' ],
    sourceType: 'module'
  },
  plugins: [ '@typescript-eslint/eslint-plugin', 'import' ],
  extends: [
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:import/errors',
    'plugin:import/warnings',
    'plugin:import/typescript',
    'prettier',
    'eslint-config-prettier'
  ],
  root: true,
  env: {
    node: true,
    jest: true,
    es6: true
  },
  rules: {
    '@typescript-eslint/no-floating-promises': 'error',
    '@typescript-eslint/interface-name-prefix': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    'no-duplicate-imports': 'off',
    '@typescript-eslint/no-duplicate-imports': [ 'error' ],
    'no-useless-escape': 'error',
    'no-useless-rename': 'error',
    'object-property-newline': [ 'error', { 'allowMultiplePropertiesPerLine': true } ],
    'no-useless-computed-key': 'error',
    'no-template-curly-in-string': 'error',
    'no-unsafe-negation': 'error',
    'no-global-assign': 'error',
    'object-curly-newline': [ 'error', { 'consistent': true } ],
    'getter-return': 'error',
    'function-paren-newline': [ 'error', 'multiline-arguments' ],
    'array-callback-return': 'error',
    'default-param-last': 'off',
    '@typescript-eslint/default-param-last': 'error',
    'array-bracket-newline': [ 'error', 'consistent' ],
    'prefer-exponentiation-operator': 'error',
    'no-dupe-else-if': 'error',
    'no-constructor-return': 'error',
    'no-useless-backreference': 'error',
    'default-case-last': 'error',
    'comma-dangle': [ 'error', 'never' ],
    'no-constant-condition': 'error',
    'no-control-regex': 'error',
    'no-dupe-args': 'error',
    'no-dupe-keys': 'error',
    'no-duplicate-case': 'error',
    'no-empty-character-class': 'error',
    'no-empty': 'error',
    'no-extra-parens': 'off',
    '@typescript-eslint/no-extra-parens': [ 'error', 'all', { 'nestedBinaryExpressions': false, 'enforceForArrowConditionals': false } ],
    'no-extra-semi': 'error',
    'no-func-assign': 'error',
    'no-inner-declarations': 'error',
    'no-invalid-regexp': 'error',
    'no-irregular-whitespace': 'error',
    'no-negated-in-lhs': 'error',
    'no-obj-calls': 'error',
    'no-regex-spaces': 'error',
    'no-sparse-arrays': 'error',
    'no-unreachable': 'error',
    'use-isnan': 'error',
    'valid-typeof': 'error',
    // 'require-atomic-updates': 'error',
    'no-misleading-character-class': 'error',
    'no-useless-catch': 'error',
    'block-scoped-var': 'error',
    'curly': [ 'error', 'multi-line' ],
    // 'dot-notation': [ 'error', { 'allowKeywords': true } ],
    'eqeqeq': 'error',
    'guard-for-in': 'error',
    'no-caller': 'error',
    'no-case-declarations': 'error',
    'no-eq-null': 'error',
    'no-extend-native': 'error',
    'no-extra-bind': 'error',
    'no-fallthrough': 'error',
    'no-floating-decimal': 'error',
    'no-iterator': 'error',
    'no-labels': 'error',
    'no-lone-blocks': 'error',
    // 'no-loop-func': 'error',
    'no-multi-str': 'error',
    'no-native-reassign': 'error',
    'no-new': 'error',
    'no-new-wrappers': 'error',
    'no-octal': 'error',
    'no-octal-escape': 'error',
    'no-proto': 'error',
    'no-redeclare': 'off',
    '@typescript-eslint/no-redeclare': [ 'error' ],
    'no-self-compare': 'error',
    'no-throw-literal': 'error',
    'no-unused-expressions': [ 'error', { 'allowShortCircuit': true, 'allowTernary': true, 'allowTaggedTemplates': true } ],
    'no-useless-call': 'error',
    'no-with': 'error',
    'radix': 'error',
    'wrap-iife': [ 'error', 'outside' ],
    'yoda': 'error',
    'arrow-spacing': [ 'error', { 'before': true, 'after': true } ],
    'constructor-super': 'error',
    'no-class-assign': 'error',
    'no-const-assign': 'error',
    'no-this-before-super': 'error',
    'no-var': 'error',
    'object-shorthand': [ 'error', 'always' ],
    'prefer-arrow-callback': 'error',
    'prefer-const': 'error',
    'prefer-template': 'error',
    // Variables
    'no-delete-var': 'error',
    'no-label-var': 'error',
    'no-shadow-restricted-names': 'error',
    'no-shadow': 'off',
    '@typescript-eslint/no-shadow': [ 'error' ],
    'no-undef-init': 'error',
    // 'no-undef': 'error'
    // Node.js
    'callback-return': 'error',
    'no-mixed-requires': 'error',
    'no-path-concat': 'error',
    // 'no-sync': 'error',
    'handle-callback-err': 'error',
    'no-new-require': 'error',
    // Stylistic
    'array-bracket-spacing': [ 'error', 'always', {
      'singleValue': true,
      'objectsInArrays': true,
      'arraysInArrays': true
    } ],
    // 'brace-style': [ 'error', 'stroustrup' ],
    'comma-spacing': [ 'error', { 'before': false, 'after': true } ],
    'computed-property-spacing': [ 'error', 'never' ],
    'eol-last': 'error',
    'indent': [ 'error', 2, { 'SwitchCase': 1 } ],
    'key-spacing': [ 'error', {
      'singleLine': {
        'beforeColon': false,
        'afterColon': true
      },
      'multiLine': {
        'beforeColon': false,
        'afterColon': true
        // 'align': 'colon'
      }
    } ],
    'linebreak-style': [ 'error', 'unix' ],
    'max-len': [ 'error', 150, 4, {
      'ignoreUrls': true,
      'ignoreComments': true,
      'ignoreTemplateLiterals': true,
      'ignoreStrings': true
    } ],
    'new-parens': 'error',
    'no-mixed-spaces-and-tabs': 'error',
    'no-multiple-empty-lines': [ 'error', { 'max': 2, 'maxEOF': 1 } ],
    'no-spaced-func': 'error',
    'no-trailing-spaces': 'error',
    'no-unneeded-ternary': 'error',
    'object-curly-spacing': [ 'error', 'always' ],
    'padded-blocks': [ 'error', 'never' ],
    // 'jsx-quotes': [ 'error', 'prefer-single' ],
    'quotes': [ 'error', 'single', 'avoid-escape' ],
    'semi-spacing': [ 'error', { 'before': false, 'after': true } ],
    'semi': [ 'error', 'always' ],
    'keyword-spacing': 'error',
    'space-before-blocks': 'error',
    'space-before-function-paren': [ 'error', { 'anonymous': 'always', 'named': 'never' } ],
    'space-in-parens': [ 'error', 'never' ],
    'space-infix-ops': 'error',
    'space-unary-ops': [ 'error', { 'words': true, 'nonwords': false } ],
    'prefer-promise-reject-errors': 'error',
    'no-compare-neg-zero': 'error',
    'no-buffer-constructor': 'error',
    'switch-colon-spacing': 'error',
    'semi-style': [ 'error', 'last' ],
    'import/no-unresolved': 2,
    'import/export': 2,
    'import/no-extraneous-dependencies': 2,
    'import/no-mutable-exports': 2,
    'import/no-commonjs': 2,
    'import/no-duplicates': 2,
    'import/imports-first': 2,
    'import/order': [ 2, { 'groups': [ 'builtin', 'external', 'internal',  'parent', 'sibling', 'index' ] } ],
    'import/newline-after-import': 2,
    'import/no-webpack-loader-syntax': 2,
    'import/no-named-default': 2
    // 'import/named': 2
  }
};
